// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  email String @unique
  hash  String

  curp String

  matricule String

  roleID Int

  role Role @relation(fields: [roleID], references: [id])

  firstName String?
  lastName  String?
  scores    score[]
  Subject   Subject[]

  @@map("users")
}

model score {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  grade_1 Int?
  grade_2 Int?
  grade_3 Int?

  subject String

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("scores")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User[]

  @@map("roles")
}

model Career {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  subjects  Period[]
}

model Subject {
  id        Int      @id @default(autoincrement())
  name      String
  user_id   Int?
  career_id Int
  period    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user          User?           @relation(fields: [user_id], references: [id])
  careers       Period[]
  CriteriaGrade CriteriaGrade[]
}

model Period {
  id         Int      @id @default(autoincrement())
  period     Int
  subject_id Int
  career_id  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  subject Subject @relation(fields: [subject_id], references: [id])
  career  Career  @relation(fields: [career_id], references: [id])
}

model Criteria {
  id            Int             @id @default(autoincrement())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  CriteriaGrade CriteriaGrade[]
}

model CriteriaGrade {
  id          Int      @id @default(autoincrement())
  criteria_id Int
  subject_id  Int
  percentage  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  criteria Criteria @relation(fields: [criteria_id], references: [id])
  subject  Subject  @relation(fields: [subject_id], references: [id])
}
